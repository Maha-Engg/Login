const express =require("express");
const mongoose =require("mongoose");
const app=express();
const cors=require("cors");
app.use(cors());
const bcrypt=require("bcrypt");


app.use(express.json())
//connect mongo

let mongoUrl="mongodb+srv://mahacm98:Maha1234@cluster0.igmsqwf.mongodb.net/signup?retryWrites=true&w=majority"

mongoose.connect(mongoUrl,{
    useNewUrlParser:true,
    useUnifiedTopology: true,
})
.then(()=>{
    console.log("Connected to database");
})
.catch((e)=>console.log(e));

// ********** check Api Using Postman ***********

// // start server
// app.listen(1001,()=>{
//     console.log("Server Started....!");
// })

// // make api

// app.post("/post",async(req,res)=>{
//     console.log(req.body);
//     const {data}=req.body;

//     try{
//         if(data=="maha"){
//             res.send({status:"Ok"});
//         }else{
//             res.send({status:"user not valid"});
//              }
//     } catch(error){
//         res.send({status:"something went wront try again"});
//     }
// });


//*********** get details from user      */ 
require("./userDetails");
const User = mongoose.model("UserInfo");

app.post("/register", async (req, res) => {

  const { fname, lname, email, password } = req.body;

  const encryptedPassword = await bcrypt.hash(password, 10);
  try {
    const oldUser = await User.findOne({ email });

    if (oldUser) {
      return res.send({ error: "User Exist" });
    }
    await User.create({
      fname,
      lname,
      email,
      password: encryptedPassword,
    });
    res.send({ status: "ok" });
  } catch (error) {
    res.send({ status: "error" });
  }
});






app.listen(4000,()=>{
    console.log ("server started");
});

